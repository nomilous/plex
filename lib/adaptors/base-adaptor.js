// Generated by CoffeeScript 1.4.0
var BaseAdaptor;

BaseAdaptor = (function() {

  function BaseAdaptor(context) {
    this.context = context;
    console.log('\nBaseAdaptor() with:', this.context);
    this.validate(this.context);
    return this.listen();
  }

  BaseAdaptor.prototype.validate = function(context) {
    if (!context) {
      throw 'undefined context';
    }
    if (!(context.listen && context.listen.adaptor)) {
      throw 'adaptor requires context.listen.adaptor';
    }
  };

  BaseAdaptor.prototype.insertEdge = function(edgeClass, connection) {
    var edge, id;
    edge = new edgeClass(connection);
    id = edge.localId();
    this.context.edges[id] = edge;
    this.context.uplink.send('event:connect', {
      mode: this.context.mode,
      globalId: this.context.globalId()
    });
    return edge;
  };

  BaseAdaptor.prototype.listen = function() {
    console.log('\nBaseAdaptor().listen()');
    ((true === true && true === true) && true === true);
    if (this.context.listen.mockConnection) {
      return this.insertEdge(require('../edges/base-edge'), this.context.listen.mockConnection);
    }
  };

  return BaseAdaptor;

})();

module.exports = BaseAdaptor;
