// Generated by CoffeeScript 1.4.0
var BaseEdge, os;

os = require('os');

BaseEdge = (function() {

  function BaseEdge() {}

  BaseEdge.prototype.validate = function(context) {
    if (!context) {
      throw 'undefined context';
    }
    if (!(context.connect && context.connect.adaptor)) {
      throw 'edge requires connect.adaptor';
    }
  };

  BaseEdge.prototype.assign = function(context, connection) {
    this.context = context;
    this.connection = connection;
    return this.handshake();
  };

  BaseEdge.prototype.handshake = function() {
    return this.send('event:connect', {
      mode: this.context.mode,
      globalId: this.globalId()
    });
  };

  BaseEdge.prototype.globalId = function() {
    return os.hostname() + '%' + process.pid;
  };

  BaseEdge.prototype.localId = function() {
    return this.connection.id;
  };

  BaseEdge.prototype.connect = function(context) {
    this.context = context;
    console.log('\nBaseEdge.connect() with:', context);
    this.validate(this.context);
    ((true === true && true === true) && true === true);
    if (this.context.connect.mockConnection) {
      this.connection = this.context.connect.mockConnection;
      return this.handshake();
    }
  };

  BaseEdge.prototype.send = function(event, payload) {
    console.log('\nBaseEdge.send() with:', event, payload);
    return this.connection.emit(event, payload);
  };

  return BaseEdge;

})();

module.exports = BaseEdge;
