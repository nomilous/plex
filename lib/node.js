// Generated by CoffeeScript 1.4.0
var Node;

Node = (function() {

  function Node() {}

  Node.edges = {};

  Node.uplink = void 0;

  Node.start = function(opts) {
    if (opts == null) {
      opts = {};
    }
    return this.listen(opts);
  };

  Node.listen = function(opts) {
    var adaptor, port;
    adaptor = opts.listen.adaptor || 'socket.io';
    port = process.env.PORT || opts.listen.port || 3001;
    switch (adaptor) {
      case 'socket.io':
        this.adaptor = require("./adaptors/" + adaptor + "-adaptor");
        return this.adaptor.listen(opts, this.onConnect);
      default:
        throw "adaptor not implemented: " + adaptor;
    }
  };

  Node.connect = function(opts) {
    var UplinkClass,
      _this = this;
    UplinkClass = require("./edges/" + opts.connect.adaptor + "-edge");
    this.uplink = new UplinkClass(null, opts);
    return this.uplink.connect(function() {
      if (opts.connect.onConnect) {
        return opts.connect.onConnect(_this.uplink);
      }
    });
  };

  Node.onConnect = function(edge) {
    return Node.edges[edge.localId()] = edge;
  };

  Node.onDisconnect = function(edge) {
    return Node.edges[edge.localId()].disconnected = {
      timestamp: new Date()
    };
  };

  return Node;

}).call(this);

module.exports = Node;
