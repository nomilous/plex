// Generated by CoffeeScript 1.4.0
var Tree;

Tree = (function() {

  function Tree(context) {
    this.context = context;
    this.edges = {
      local: {},
      remote: {}
    };
  }

  Tree.prototype.insertLocal = function(localEdge, connectData) {
    var id;
    id = localEdge.localId();
    this.edges.local[id] = {
      local: {
        mode: this.context.mode,
        globalId: this.context.globalId()
      },
      remote: connectData
    };
    console.log('tree', this.edges);
    if (this.context.mode !== 'root') {
      return this.context.uplink.send('event:edge:connect', this.edges.local[id]);
    }
  };

  Tree.prototype.insertRemote = function(connectData) {
    var id;
    id = connectData.local.globalId;
    this.edges.remote[id] = connectData;
    console.log('tree', this.edges);
    if (this.context.mode !== 'root') {
      return this.context.uplink.send('event:edge:connect', this.edges.remote[id]);
    }
  };

  Tree.prototype.removeLocal = function(localEdge) {
    var id;
    id = localEdge.localId();
    this.edges.local[id].disconnected = new Date();
    if (this.context.mode !== 'root') {
      return this.context.uplink.send('event:edge:disconnect', this.edges.local[id]);
    }
  };

  Tree.prototype.removeRemote = function(disconnectData) {
    var id;
    id = disconnectData.local.globalId;
    this.edges.remote[id] = disconnectData;
    console.log('\n\n\ntree', this.edges);
    if (this.context.mode !== 'root') {
      return this.context.uplink.send('event:edge:disconnect', this.edges.remote[id]);
    }
  };

  return Tree;

})();

module.exports = Tree;
