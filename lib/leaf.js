// Generated by CoffeeScript 1.4.0
var Leaf, Node,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Node = require('./node');

Leaf = (function(_super) {

  __extends(Leaf, _super);

  function Leaf() {
    return Leaf.__super__.constructor.apply(this, arguments);
  }

  Leaf.start = function(opts) {
    if (opts == null) {
      opts = {};
    }
    if (!(opts.connect && opts.connect.adaptor)) {
      throw 'proxy requires opts.connect.adaptor parameters';
    }
    return this.connect(opts);
  };

  return Leaf;

})(Node);

module.exports = Leaf;
