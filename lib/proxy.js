// Generated by CoffeeScript 1.4.0
var Node, Proxy,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Node = require('./node');

Proxy = (function(_super) {

  __extends(Proxy, _super);

  function Proxy() {
    return Proxy.__super__.constructor.apply(this, arguments);
  }

  Proxy.parent = void 0;

  Proxy.children = Proxy.edges;

  Proxy.start = function(opts) {
    if (opts == null) {
      opts = {};
    }
    if (!opts.connect) {
      throw 'proxy requires opts.connect parameters';
    }
  };

  return Proxy;

})(Node);

module.exports = Proxy;
