// Generated by CoffeeScript 1.4.0
var Node, Proxy,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Node = require('./node');

Proxy = (function(_super) {

  __extends(Proxy, _super);

  function Proxy() {
    return Proxy.__super__.constructor.apply(this, arguments);
  }

  Proxy.parent = void 0;

  Proxy.children = Proxy.edges;

  Proxy.start = function(opts) {
    var ParentEdgeClass,
      _this = this;
    if (opts == null) {
      opts = {};
    }
    if (!(opts.connect && opts.connect.adaptor)) {
      throw 'proxy requires opts.connect.adaptor parameters';
    }
    if (!(opts.listen && opts.listen.adaptor)) {
      throw 'proxy requires opts.listen.adaptor parameters';
    }
    ParentEdgeClass = require("./edges/" + opts.connect.adaptor + "-edge");
    this.parent = new ParentEdgeClass(null, opts);
    this.parent.connect(function() {
      if (opts.connect.onConnect) {
        return opts.connect.onConnect(_this.parent);
      }
    });
    return this.listen(opts);
  };

  return Proxy;

})(Node);

module.exports = Proxy;
